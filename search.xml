<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>test3</title>
    <url>/2020/01/29/test3/</url>
    <content><![CDATA[<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">theme:</span> ayer</span><br></pre></td></tr></table></figure>

<blockquote>
<p>sdsdfsfaf</p>
</blockquote>
<p><a href="http://baidu.com" target="_blank" rel="noopener">http://baidu.com</a></p>
<p><a href="./sfsfsf">sfdsdfs</a></p>
<hr>
<hr>
<p><img src="%5Cimages%5Cpasted-0.png" alt="upload successful"></p>
]]></content>
  </entry>
  <entry>
    <title>ICARUS主题更换问题</title>
    <url>/2020/01/29/icaruserror/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/29/icaruserror/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/29/icaruserror/</a></p>
<h3 id="发现错误"><a href="#发现错误" class="headerlink" title="发现错误"></a>发现错误</h3><ul>
<li>下载更换ICARUS主题后，重新执行<code>hexo serve</code>命令，发现报错如下<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ERROR </span>Package cheerio is not installed.  </span><br><span class="line"><span class="keyword">ERROR </span>Please install the missing dependencies from the root directory of your Hexo site.</span><br></pre></td></tr></table></figure>
<a id="more"></a>

</li>
</ul>
<h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><ul>
<li><p>原因是缺少<code>cheerio</code>依赖，进入<code>blog-hexo</code>目录，执行<code>npm i cheerio -S</code>命令进行安装即可，<code>-S</code>指安装并将其保存到当前项目的配置中，下次就会统一安装了。</p>
</li>
<li><p>重新执行<code>hexo serve</code>命令，发现如下信息</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">INFO</span>  Checking dependencies  </span><br><span class="line"><span class="builtin-name">INFO</span>  Validating the configuration file  </span><br><span class="line">WARN  themes/icarus/\_config.yml is <span class="keyword">not</span> found. We are creating one <span class="keyword">for</span> you<span class="built_in">..</span>.  </span><br><span class="line"><span class="builtin-name">INFO</span>  themes/icarus/\_config.yml is created. Please restart Hexo <span class="keyword">to</span> apply changes.</span><br></pre></td></tr></table></figure>
</li>
<li><p>提示缺少<code>themes/icarus/_config.yml</code>文件，已经帮助我们生成，再次运行即可正常启动。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>主题</tag>
        <tag>ICARUS</tag>
        <tag>纠错</tag>
      </tags>
  </entry>
  <entry>
    <title>Git代理设置</title>
    <url>/2020/01/29/gitproxy/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/29/gitproxy/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/29/gitproxy/</a></p>
<h3 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1. 前期准备"></a>1. 前期准备</h3><ul>
<li>代理服务器</li>
<li>代理软件<a id="more"></a>

</li>
</ul>
<h3 id="2-代理服务器"><a href="#2-代理服务器" class="headerlink" title="2. 代理服务器"></a>2. 代理服务器</h3><ul>
<li>打开代理软件，连接上代理服务器</li>
<li>确定代理软件的占用端口，一般默认<code>1080端口</code> （可暂时跳过<ol>
<li>打开设备管理器，找到代理软件的详细信息确认PID<br><img src="https://i.loli.net/2020/01/29/MqwgAa9FHYsjmNI.png" alt="pid"></li>
<li><code>CMD</code>打开命令行，查看端口占用信息,使用<code>netstat -ano</code>命令即可查看全部端口占用信息</li>
<li><code>Ctrl</code>+<code>F</code>查找之前找到的PID，确认占用端口<br><img src="https://i.loli.net/2020/01/29/uzPsYNweKmcBOQJ.png" alt="port"></li>
</ol>
</li>
</ul>
<h3 id="3-设置git代理"><a href="#3-设置git代理" class="headerlink" title="3. 设置git代理"></a>3. 设置git代理</h3><ul>
<li><p>打开<code>Git Bash</code></p>
</li>
<li><p>设置代理</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#全局设置</span></span><br><span class="line">git config <span class="params">--global</span> http.proxy socks5:<span class="string">//localhost</span><span class="function">:1080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本次设置</span></span><br><span class="line">git clone https:<span class="string">//github.com/example/example.git</span> <span class="params">--config</span> <span class="string">"http.proxy=127.0.0.1:1080"</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>通过开源项目免费申请JetBrains产品激活码</title>
    <url>/2020/01/22/jetbrains/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/22/jetbrains/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/22/jetbrains/</a></p>
<p>转载自：<a href="http://www.hellohao.cn/?p=1111316" target="_blank" rel="noopener">Hellohao博客</a></p>
<p><img src="http://cdn.wwery.com/Hellohao/287d81128020741.png" alt="ideabanner.png"></p>
<p>说到JetBrains，我们使用最多的就是IDEA和webstorm了吧，今天博主就给分享一下如何通过自己的开源项目免费申请正版激活码。<a id="more"></a></p>
<h4 id="申请前操作"><a href="#申请前操作" class="headerlink" title="申请前操作"></a>申请前操作</h4><ul>
<li>首先需要有自己的开源项目</li>
<li>将自己的Github的邮箱设置为公开（如下图）</li>
</ul>
<p><img src="http://cdn.wwery.com/Hellohao/90bf71128021006.png" alt="emailsettimg.png"></p>
<h4 id="申请激活码"><a href="#申请激活码" class="headerlink" title="申请激活码"></a>申请激活码</h4><p><strong>申请地址:</strong><a href="https://www.jetbrains.com/shop/eform/opensource" target="_blank" rel="noopener" title="https://www.jetbrains.com/shop/eform/opensource">https://www.jetbrains.com/shop/eform/opensource</a><br>打开以上申请地址，然后按要求填写即可：<br>这里需要注意的是：申请的邮箱必须和你Github的主邮箱要保持一致。否则不能通过。<br><img src="http://cdn.wwery.com/Hellohao/1fdec1128021312.png" alt="sqjt.png"></p>
<p>申请完成之后会有如下提示：<br><img src="http://cdn.wwery.com/Hellohao/ade131128021504.png" alt="申请成功.png"></p>
<p>然后，就需要我们等一两天，等待官方审核通过后就会给我们回复邮件告诉我们如何领取激活码。<br><img src="http://cdn.wwery.com/Hellohao/1a6cb1128022020.png" alt="邮件内容.png"></p>
<p>激活码有效期是一年的，但是可以无限申请，意思就是只要你开源项目保持更新提交，那么快到期的时候再次申请即可。</p>
]]></content>
      <categories>
        <category>转载</category>
      </categories>
      <tags>
        <tag>JetBrains</tag>
        <tag>开发工具</tag>
      </tags>
  </entry>
  <entry>
    <title>哔哩哔哩(bilibili)视频下载-支持4K</title>
    <url>/2020/01/20/bilibili/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/20/bilibili/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/20/bilibili/</a></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>小破站现在支持了4K清晰度了，作为没有4K显示器的我然而并体验不出区别，但我就是喜欢 屯</p>
<h3 id="准备阶段–安装著名的下载器IDM"><a href="#准备阶段–安装著名的下载器IDM" class="headerlink" title="准备阶段–安装著名的下载器IDM"></a>准备阶段–安装著名的下载器IDM</h3><p>  下载链接: <a href="https://www.internetdownloadmanager.com/" target="_blank" rel="noopener">官方链接</a>  <a href="https://hu.zenith.workers.dev/IDM%206.36.2/" target="_blank" rel="noopener">个人云盘链接</a></p>
<p>  安装教程不多说了，个人云盘版文件集成了浏览器插件（插件特别重要）<a id="more"></a></p>
<h3 id="正式阶段–前往小破站下载"><a href="#正式阶段–前往小破站下载" class="headerlink" title="正式阶段–前往小破站下载"></a>正式阶段–前往小破站下载</h3><p>浏览器正常浏览小破站，找到需要下载视频页面，在视频页面右上角会出现IDM的下载浮窗，如下图所示（如果看不到这个悬浮窗请<code>刷新页面</code>或<code>重启浏览器</code>或<code>更换浏览器</code>,建议使用<code>Chrome</code>，还是没有可能是你的插件没有安装好，或者是由于之前有过一些我不知道的操作，请自行解决没有请刷新页面或自己发动聪明的大脑解决）</p>
<p>  <img src="https://i.loli.net/2020/01/20/JSmhNRAYHUlWDaI.png" alt=""></p>
<p>点击下载该视频，如果下载的视频是<code>FLV</code>格式的则即刻直接下载(一般B站默认是使用H5播放器，如果你是IE老用户，大部分视频在此下载只有<code>MP4</code>格式，只有小部分视频会在H5播放器中提供出<code>FLV</code>格式下载)</p>
<p>此时需要确定你的浏览器使用的播放器（H5/flash，在B站播放页面鼠标移动到设置就能看到）如下：</p>
<p>  <img src="https://i.loli.net/2020/01/20/27jI6cNguQaA3Yr.png" alt=""></p>
<p>如果是H5播放器，由于B站的一般音视频是分隔开来的，此时下载的<code>MP4</code>格式视频是没有声音的（反正我的是没有），<code>切换为flash播放器</code>，此时你能下载的最大分辨率只有1080+的<code>FLV</code>格式的视频文件，但下载的视频文件是有声音的(这样就很Nice).</p>
<h3 id="进阶阶段–4K分辨率视频下载"><a href="#进阶阶段–4K分辨率视频下载" class="headerlink" title="进阶阶段–4K分辨率视频下载"></a>进阶阶段–4K分辨率视频下载</h3><p><code>如果视频没有4K画质或你主观不需要4K，到这就可以结束了</code></p>
<p><code>如果没有大会员也可以到这结束了</code></p>
<p>切换为H5播放器，刷新页面可选择<code>4K</code>分辨率视频下载（前提当然是你有<code>大会员</code>），经由本人测试，使用<code>IDM</code>下载只能找到大部分不具有<code>4K</code>分辨率的视频对应的音频文件，具有<code>4K</code>分辨率的视频利用<code>IDM</code>无法找到小破站的音频单独文件</p>
<p><img src="https://i.loli.net/2020/01/22/XYkjHbi3a1cKJgf.png" alt=""></p>
<p><img src="https://i.loli.net/2020/01/22/P7qhQuHmElnFU1S.png" alt=""></p>
<p>现在就只能走一点弯路了，就是提取出之前的<code>FLV</code>格式的视频中的音频</p>
<p>  在线视频提取音频地址：<a href="http://www.bejson.com/convert/video2audio/" target="_blank" rel="noopener">http://www.bejson.com/convert/video2audio/</a></p>
<p>  最后再进行一次音视频合并，音视频合并的文件可在网盘下载<br>  视频合并需要ffmpeg的支持，可前往官网下载全局安装<br>  <a href="https://www.ffmpeg.org/download.html/" target="_blank" rel="noopener">https://www.ffmpeg.org/download.html/</a></p>
<p>  似乎也可以只下载我网盘里的<code>.exe</code>文件，与<code>.bat</code>文件在同一文件夹目录下就可以</p>
<h4 id="自主创建-bat文件："><a href="#自主创建-bat文件：" class="headerlink" title="自主创建.bat文件："></a>自主创建<code>.bat</code>文件：</h4><p>  1.本地创建一个txt文件<br>  2.输入如下代码</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">title</span> 音视频合并</span><br><span class="line"><span class="built_in">echo</span> 个人博客网站：[url]https://ccsubia.github.io/[/url]</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">set</span> /p audio=请将【音频】文件拖拽到此处，按下回车确认：</span><br><span class="line"><span class="built_in">set</span> /p video=请将【视频】文件拖拽到此处，按下回车确认：</span><br><span class="line">ffmpeg.exe -i <span class="variable">%audio%</span> -i <span class="variable">%video%</span> -acodec <span class="built_in">copy</span> -vcodec <span class="built_in">copy</span> <span class="variable">%video%</span>.mp4</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> 合并结束！</span><br><span class="line"><span class="built_in">echo</span> 文件已经输出到本地原视频所在文件夹。</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>

<p>3.另存为<code>.bat</code>文件（注意编码方式选择ANSI，否则会出现中文乱码）<br>4.双击<code>.bat</code>文件，拖入音频和视频文件，回车<br>5.结束</p>
]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>4K</tag>
      </tags>
  </entry>
</search>
