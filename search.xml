<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IDEA快捷键</title>
    <url>/2020/02/26/IDEA/</url>
    <content><![CDATA[<p>Ctrl+Shift + Enter，语句完成<br>“！”，否定完成，输入表达式时按 “！”键<br>Ctrl+E，最近的文件<br>Ctrl+Shift+E，最近更改的文件<br>Shift+Click，可以关闭文件<br>Ctrl+[ OR ]，可以跑到大括号的开头与结尾<br>Ctrl+F12，可以显示当前文件的结构<br>Ctrl+F7，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择<br>Ctrl+N，可以快速打开类<br>Ctrl+Shift+N，可以快速打开文件  </p>
<a id="more"></a>
<p>Alt+Q，可以看到当前方法的声明<br>Ctrl+P，可以显示参数信息<br>Ctrl+Shift+Insert，可以选择剪贴板内容并插入<br>Alt+Insert，可以生成构造器/Getter/Setter等<br>Ctrl+Alt+V，可以引入变量。例如：new String(); 自动导入变量定义<br>Ctrl+Alt+T，可以把代码包在一个块内，例如：try/catch<br>Ctrl+Enter，导入包，自动修正<br>Ctrl+Alt+L，格式化代码<br>Ctrl+Alt+I，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作<br>Ctrl+Alt+O，优化导入的类和包<br>Ctrl+R，替换文本<br>Ctrl+F，查找文本<br>Ctrl+Shift+Space，自动补全代码<br>Ctrl+空格，代码提示（与系统输入法快捷键冲突）<br>Ctrl+Shift+Alt+N，查找类中的方法或变量<br>Alt+Shift+C，最近的更改<br>Alt+Shift+Up/Down，上/下移一行<br>Shift+F6，重构 – 重命名<br>Ctrl+X，删除行<br>Ctrl+D，复制行<br>Ctrl+/或Ctrl+Shift+/，注释（//或者/**/）<br>Ctrl+J，自动代码（例如：serr）<br>Ctrl+Alt+J，用动态模板环绕<br>Ctrl+H，显示类结构图（类的继承层次）<br>Ctrl+Q，显示注释文档<br>Alt+F1，查找代码所在位置<br>Alt+1，快速打开或隐藏工程面板<br>Ctrl+Alt+left/right，返回至上次浏览的位置<br>Alt+left/right，切换代码视图<br>Alt+Up/Down，在方法间快速移动定位<br>Ctrl+Shift+Up/Down，向上/下移动语句<br>F2 或 Shift+F2，高亮错误或警告快速定位<br>Tab，代码标签输入完成后，按 Tab，生成代码<br>Ctrl+Shift+F7，高亮显示所有该文本，按 Esc 高亮消失<br>Alt+F3，逐个往下查找相同文本，并高亮显示<br>Ctrl+Up/Down，光标中转到第一行或最后一行下<br>Ctrl+B/Ctrl+Click，快速打开光标处的类或方法（跳转到定义处）<br>Ctrl+Alt+B，跳转到方法实现处<br>Ctrl+Shift+Backspace，跳转到上次编辑的地方<br>Ctrl+O，重写方法<br>Ctrl+Alt+Space，类名自动完成<br>Ctrl+Alt+Up/Down，快速跳转搜索结果<br>Ctrl+Shift+J，整合两行<br>Alt+F8，计算变量值<br>Ctrl+Shift+V，可以将最近使用的剪贴板内容选择插入到文本<br>Ctrl+Alt+Shift+V，简单粘贴<br>Shift+Esc，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口<br>F12，把焦点从编辑器移到最近使用的工具窗口<br>Shift+F1，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器<br>Ctrl+W，可以选择单词继而语句继而行继而函数<br>Ctrl+Shift+W，取消选择光标所在词<br>Alt+F7，查找整个工程中使用地某一个类、方法或者变量的位置<br>Ctrl+I，实现方法<br>Ctrl+Shift+U，大小写转化<br>Ctrl+Y，删除当前行</p>
<p>Shift+Enter，向下插入新行<br>psvm/sout，main/System.out.println(); Ctrl+J，查看更多<br>Ctrl+Shift+F，全局查找<br>Ctrl+F，查找/Shift+F3，向上查找/F3，向下查找<br>Ctrl+Shift+S，高级搜索<br>Ctrl+U，转到父类<br>Ctrl+Alt+S，打开设置对话框<br>Alt+Shift+Inert，开启/关闭列选择模式<br>Ctrl+Alt+Shift+S，打开当前项目/模块属性<br>Ctrl+G，定位行<br>Alt+Home，跳转到导航栏<br>Ctrl+Enter，上插一行<br>Ctrl+Backspace，按单词删除<br>Ctrl+”+/-”，当前方法展开、折叠<br>Ctrl+Shift+”+/-”，全部展开、折叠<br>【调试部分、编译】<br>Ctrl+F2，停止<br>Alt+Shift+F9，选择 Debug<br>Alt+Shift+F10，选择 Run<br>Ctrl+Shift+F9，编译<br>Ctrl+Shift+F10，运行<br>Ctrl+Shift+F8，查看断点<br>F8，步过<br>F7，步入<br>Shift+F7，智能步入<br>Shift+F8，步出<br>Alt+Shift+F8，强制步过<br>Alt+Shift+F7，强制步入<br>Alt+F9，运行至光标处<br>Ctrl+Alt+F9，强制运行至光标处<br>F9，恢复程序<br>Alt+F10，定位到断点<br>Ctrl+F8，切换行断点<br>Ctrl+F9，生成项目<br>Alt+1，项目<br>Alt+2，收藏<br>Alt+6，TODO<br>Alt+7，结构<br>Ctrl+Shift+C，复制路径<br>Ctrl+Alt+Shift+C，复制引用，必须选择类名<br>Ctrl+Alt+Y，同步<br>Ctrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单）<br>Shift+F12，还原默认布局<br>Ctrl+Shift+F12，隐藏/恢复所有窗口<br>Ctrl+F4，关闭<br>Ctrl+Shift+F4，关闭活动选项卡<br>Ctrl+Tab，转到下一个拆分器<br>Ctrl+Shift+Tab，转到上一个拆分器<br>【重构】<br>Ctrl+Alt+Shift+T，弹出重构菜单<br>Shift+F6，重命名<br>F6，移动<br>F5，复制<br>Alt+Delete，安全删除<br>Ctrl+Alt+N，内联<br>【查找】<br>Ctrl+F，查找<br>Ctrl+R，替换<br>F3，查找下一个<br>Shift+F3，查找上一个<br>Ctrl+Shift+F，在路径中查找<br>Ctrl+Shift+R，在路径中替换<br>Ctrl+Shift+S，搜索结构<br>Ctrl+Shift+M，替换结构<br>Alt+F7，查找用法<br>Ctrl+Alt+F7，显示用法<br>Ctrl+F7，在文件中查找用法<br>Ctrl+Shift+F7，在文件中高亮显示用法</p>
]]></content>
  </entry>
  <entry>
    <title>每日一言</title>
    <url>/2020/02/04/word_day/</url>
    <content><![CDATA[<script src="https://unpkg.com/axios/dist/axios.min.js">
</script>
<h2 id="每日一言-更新"><a href="#每日一言-更新" class="headerlink" title="每日一言 更新"></a>每日一言 <span class = "today" id = "today"></span>更新</h2>  <br>

<ul>
<li><h3 id=""><a href="#" class="headerlink" title=""></a><span id = "author1"></span></h3><h4 id="-1"><a href="#-1" class="headerlink" title=""></a><span id = "content1"></span></h4><br>
<script type="text/javascript" src="/js/today_min.js"></script>
<script src="/js/word_day.js"></script>
<a id="more"></a>   </li>
<li><h3 id="-2"><a href="#-2" class="headerlink" title=""></a><span id = "author2"></span></h3><h4 id="-3"><a href="#-3" class="headerlink" title=""></a><span id = "content2"></span></h4><h4 id="-4"><a href="#-4" class="headerlink" title=""></a><span id = "content_en2"></span></h4><br>
</li>
<li><h3 id="-5"><a href="#-5" class="headerlink" title=""></a><span id = "author3"></span></h3><h4 id="-6"><a href="#-6" class="headerlink" title=""></a><span id = "content3"></span></h4><h4 id="-7"><a href="#-7" class="headerlink" title=""></a><span id = "content_en3"></span></h4></li>
</ul>
<script src="/js/showpic.js"></script>]]></content>
      <categories>
        <category>文字</category>
      </categories>
      <tags>
        <tag>每日一言</tag>
      </tags>
  </entry>
  <entry>
    <title>Bing每日壁纸（每日更新）</title>
    <url>/2020/02/01/bingphoto/</url>
    <content><![CDATA[<h2 id="Bing壁纸-每日更新"><a href="#Bing壁纸-每日更新" class="headerlink" title="Bing壁纸(每日更新)  "></a>Bing壁纸(每日更新)  <span class = "date" id = "date"></span></h2><p><img src = "" id = "picshow" 
onerror="this.src='https://api.berryapi.net/?service=App.Bing.Images&day=-0';this.οnerrοr=null"></p>
<p><a href="javascript:void(0)" style = "width:50%;text-decoration: none;" onclick = beforeday()>&lt; 前一天</a><a href="javascript:void(0)" style = "float:right;text-decoration: none;" onclick = nextday()>后一天 &gt;</a></p>
<blockquote>
<p><a href="./Bing">Bing壁纸汇总</a></p>
</blockquote>
<script type="text/javascript" src="/js/bingday_1.2_min.js"></script>]]></content>
      <categories>
        <category>置顶</category>
      </categories>
      <tags>
        <tag>壁纸</tag>
        <tag>Bing</tag>
      </tags>
  </entry>
  <entry>
    <title>ICARUS主题更换问题</title>
    <url>/2020/01/29/icaruserror/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/29/icaruserror/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/29/icaruserror/</a></p>
<h3 id="发现错误"><a href="#发现错误" class="headerlink" title="发现错误"></a>发现错误</h3><ul>
<li>下载更换ICARUS主题后，重新执行<code>hexo serve</code>命令，发现报错如下<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ERROR </span>Package cheerio is not installed.  </span><br><span class="line"><span class="keyword">ERROR </span>Please install the missing dependencies from the root directory of your Hexo site.</span><br></pre></td></tr></table></figure>
<a id="more"></a>

</li>
</ul>
<h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><ul>
<li><p>原因是缺少<code>cheerio</code>依赖，进入<code>blog-hexo</code>目录，执行<code>npm i cheerio -S</code>命令进行安装即可，<code>-S</code>指安装并将其保存到当前项目的配置中，下次就会统一安装了。</p>
</li>
<li><p>重新执行<code>hexo serve</code>命令，发现如下信息</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">INFO</span>  Checking dependencies  </span><br><span class="line"><span class="builtin-name">INFO</span>  Validating the configuration file  </span><br><span class="line">WARN  themes/icarus/\_config.yml is <span class="keyword">not</span> found. We are creating one <span class="keyword">for</span> you<span class="built_in">..</span>.  </span><br><span class="line"><span class="builtin-name">INFO</span>  themes/icarus/\_config.yml is created. Please restart Hexo <span class="keyword">to</span> apply changes.</span><br></pre></td></tr></table></figure>
</li>
<li><p>提示缺少<code>themes/icarus/_config.yml</code>文件，已经帮助我们生成，再次运行即可正常启动。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>主题</tag>
        <tag>ICARUS</tag>
        <tag>纠错</tag>
      </tags>
  </entry>
  <entry>
    <title>Git代理设置</title>
    <url>/2020/01/29/gitproxy/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/29/gitproxy/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/29/gitproxy/</a></p>
<h3 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1. 前期准备"></a>1. 前期准备</h3><ul>
<li>代理服务器</li>
<li>代理软件<a id="more"></a>

</li>
</ul>
<h3 id="2-代理服务器"><a href="#2-代理服务器" class="headerlink" title="2. 代理服务器"></a>2. 代理服务器</h3><ul>
<li><p>打开代理软件，连接上代理服务器</p>
</li>
<li><p>确定代理软件的占用端口，一般默认<code>1080端口</code> 今天突然发现蛇皮了，将鼠标移动到小图标会显示出端口号<br><img src="/images/pasted-2.png" alt="upload successful"><br>如果你用的其他代理软件，不知道端口号是多少，可用下面方法查看</p>
<ol>
<li>打开设备管理器，找到代理软件的详细信息确认PID<br><img src="https://i.loli.net/2020/01/29/MqwgAa9FHYsjmNI.png" alt="pid"></li>
<li><code>CMD</code>打开命令行，查看端口占用信息,使用<code>netstat -ano</code>命令即可查看全部端口占用信息</li>
<li><code>Ctrl</code>+<code>F</code>查找之前找到的PID，确认占用端口<br><img src="https://i.loli.net/2020/01/29/uzPsYNweKmcBOQJ.png" alt="port"></li>
</ol>
</li>
</ul>
<h3 id="3-设置git代理"><a href="#3-设置git代理" class="headerlink" title="3. 设置git代理"></a>3. 设置git代理</h3><ul>
<li><p>打开<code>Git Bash</code></p>
</li>
<li><p>设置代理</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#全局设置</span></span><br><span class="line">git config <span class="params">--global</span> http.proxy socks5:<span class="string">//127.0.0.1</span><span class="function">:1080</span></span><br><span class="line">git config <span class="params">--global</span> https.proxy https:<span class="string">//127.0.0.1</span><span class="function">:1080</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#只对github.com代理</span></span><br><span class="line">git config <span class="params">--global</span> http.https:<span class="string">//github.com.proxy</span> socks5:<span class="string">//127.0.0.1</span><span class="function">:1080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本次设置</span></span><br><span class="line">git clone https:<span class="string">//github.com/example/example.git</span> <span class="params">--config</span> <span class="string">"http.proxy=127.0.0.1:1080"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>取消设置代理</p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取消全局代理</span></span><br><span class="line">  git config --<span class="keyword">global</span> --<span class="keyword">unset</span> <span class="keyword">http</span>.proxy</span><br><span class="line">  git config --<span class="keyword">global</span> --<span class="keyword">unset</span> https.proxy</span><br><span class="line">  </span><br><span class="line"><span class="comment">  # 或者</span></span><br><span class="line">  npm config delete proxy</span><br><span class="line">  </span><br><span class="line"><span class="comment">  # 取消github.com代理</span></span><br><span class="line">  git config --<span class="keyword">global</span> --<span class="keyword">unset</span> <span class="keyword">http</span>.https://github.com.proxy</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="4-测试结果"><a href="#4-测试结果" class="headerlink" title="4.测试结果"></a>4.测试结果</h3><p><img src="/images/pasted-5.png" alt="代理测试"><br>成功！！</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>哔哩哔哩(bilibili)视频下载-支持4K</title>
    <url>/2020/01/20/bilibili/</url>
    <content><![CDATA[<p><em>本文链接地址：</em> <a href="https://ccsubia.github.io/2020/01/20/bilibili/" target="_blank" rel="noopener">https://ccsubia.github.io/2020/01/20/bilibili/</a></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>小破站现在支持了4K清晰度了，作为没有4K显示器的我然而并体验不出区别，但我就是喜欢 屯</p>
<h3 id="准备阶段–安装著名的下载器IDM"><a href="#准备阶段–安装著名的下载器IDM" class="headerlink" title="准备阶段–安装著名的下载器IDM"></a>准备阶段–安装著名的下载器IDM</h3><p>  下载链接: <a href="https://www.internetdownloadmanager.com/" target="_blank" rel="noopener">官方链接</a>  <a href="https://hu.zenith.workers.dev/IDM%206.36.2/" target="_blank" rel="noopener">个人云盘链接</a></p>
<p>  安装教程不多说了，个人云盘版文件集成了浏览器插件（插件特别重要）<a id="more"></a></p>
<h3 id="正式阶段–前往小破站下载"><a href="#正式阶段–前往小破站下载" class="headerlink" title="正式阶段–前往小破站下载"></a>正式阶段–前往小破站下载</h3><p>浏览器正常浏览小破站，找到需要下载视频页面，在视频页面右上角会出现IDM的下载浮窗，如下图所示（如果看不到这个悬浮窗请<code>刷新页面</code>或<code>重启浏览器</code>或<code>更换浏览器</code>,建议使用<code>Chrome</code>，还是没有可能是你的插件没有安装好，或者是由于之前有过一些我不知道的操作，请自行解决没有请刷新页面或自己发动聪明的大脑解决）</p>
<p>  <img src="https://i.loli.net/2020/01/20/JSmhNRAYHUlWDaI.png" alt=""></p>
<p>点击下载该视频，如果下载的视频是<code>FLV</code>格式的则即刻直接下载(一般B站默认是使用H5播放器，如果你是IE老用户，大部分视频在此下载只有<code>MP4</code>格式，只有小部分视频会在H5播放器中提供出<code>FLV</code>格式下载)</p>
<p>此时需要确定你的浏览器使用的播放器（H5/flash，在B站播放页面鼠标移动到设置就能看到）如下：</p>
<p>  <img src="https://i.loli.net/2020/01/20/27jI6cNguQaA3Yr.png" alt=""></p>
<p>如果是H5播放器，由于B站的一般音视频是分隔开来的，此时下载的<code>MP4</code>格式视频是没有声音的（反正我的是没有），<code>切换为flash播放器</code>，此时你能下载的最大分辨率只有1080+的<code>FLV</code>格式的视频文件，但下载的视频文件是有声音的(这样就很Nice).</p>
<h3 id="进阶阶段–4K分辨率视频下载"><a href="#进阶阶段–4K分辨率视频下载" class="headerlink" title="进阶阶段–4K分辨率视频下载"></a>进阶阶段–4K分辨率视频下载</h3><p><code>如果视频没有4K画质或你主观不需要4K，到这就可以结束了</code></p>
<p><code>如果没有大会员也可以到这结束了</code></p>
<p>切换为H5播放器，刷新页面可选择<code>4K</code>分辨率视频下载（前提当然是你有<code>大会员</code>），经由本人测试，使用<code>IDM</code>下载只能找到大部分不具有<code>4K</code>分辨率的视频对应的音频文件，具有<code>4K</code>分辨率的视频利用<code>IDM</code>无法找到小破站的音频单独文件</p>
<p><img src="https://i.loli.net/2020/01/22/XYkjHbi3a1cKJgf.png" alt=""></p>
<p><img src="https://i.loli.net/2020/01/22/P7qhQuHmElnFU1S.png" alt=""></p>
<p>现在就只能走一点弯路了，就是提取出之前的<code>FLV</code>格式的视频中的音频</p>
<p>  在线视频提取音频地址：<a href="http://www.bejson.com/convert/video2audio/" target="_blank" rel="noopener">http://www.bejson.com/convert/video2audio/</a></p>
<p>  最后再进行一次音视频合并，音视频合并的文件可在网盘下载<br>  视频合并需要ffmpeg的支持，可前往官网下载全局安装<br>  <a href="https://www.ffmpeg.org/download.html/" target="_blank" rel="noopener">https://www.ffmpeg.org/download.html/</a></p>
<p>  似乎也可以只下载我网盘里的<code>.exe</code>文件，与<code>.bat</code>文件在同一文件夹目录下就可以</p>
<h4 id="自主创建-bat文件："><a href="#自主创建-bat文件：" class="headerlink" title="自主创建.bat文件："></a>自主创建<code>.bat</code>文件：</h4><p>  1.本地创建一个txt文件<br>  2.输入如下代码</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">title</span> 音视频合并</span><br><span class="line"><span class="built_in">echo</span> 个人博客网站：[url]https://ccsubia.github.io/[/url]</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">set</span> /p audio=请将【音频】文件拖拽到此处，按下回车确认：</span><br><span class="line"><span class="built_in">set</span> /p video=请将【视频】文件拖拽到此处，按下回车确认：</span><br><span class="line">ffmpeg.exe -i <span class="variable">%audio%</span> -i <span class="variable">%video%</span> -acodec <span class="built_in">copy</span> -vcodec <span class="built_in">copy</span> <span class="variable">%video%</span>.mp4</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> 合并结束！</span><br><span class="line"><span class="built_in">echo</span> 文件已经输出到本地原视频所在文件夹。</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>

<p>3.另存为<code>.bat</code>文件（注意编码方式选择ANSI，否则会出现中文乱码）<br>4.双击<code>.bat</code>文件，拖入音频和视频文件，回车<br>5.结束</p>
]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>4K</tag>
      </tags>
  </entry>
</search>
